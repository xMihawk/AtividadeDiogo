// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Namespace.Data;

#nullable disable

namespace EPIlist.Migrations
{
    [DbContext(typeof(AppDataContext))]
    [Migration("20231008150236_inicialModelo")]
    partial class inicialModelo
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder.HasAnnotation("ProductVersion", "6.0.21");

            modelBuilder.Entity("EPIlist.Models.Epi", b =>
                {
                    b.Property<int>("EpiID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int>("C_A")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Descricao")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<int>("Quantidade")
                        .HasColumnType("INTEGER");

                    b.HasKey("EpiID");

                    b.ToTable("Epis");
                });

            modelBuilder.Entity("EPIlist.Models.Equipe", b =>
                {
                    b.Property<int>("EquipeID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int?>("LiderID")
                        .HasColumnType("INTEGER");

                    b.Property<int?>("LiderUsuarioID")
                        .HasColumnType("INTEGER");

                    b.Property<string>("NomeEquipe")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<int>("UnidadeID")
                        .HasColumnType("INTEGER");

                    b.HasKey("EquipeID");

                    b.HasIndex("LiderUsuarioID");

                    b.HasIndex("UnidadeID");

                    b.ToTable("Equipes");
                });

            modelBuilder.Entity("EPIlist.Models.Unidade", b =>
                {
                    b.Property<int>("UnidadeID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Nome")
                        .HasColumnType("TEXT");

                    b.HasKey("UnidadeID");

                    b.ToTable("Unidades");
                });

            modelBuilder.Entity("EPIlist.Models.UnidadeUsuario", b =>
                {
                    b.Property<int>("UsuarioID")
                        .HasColumnType("INTEGER");

                    b.Property<int>("UnidadeID")
                        .HasColumnType("INTEGER");

                    b.HasKey("UsuarioID", "UnidadeID");

                    b.HasIndex("UnidadeID");

                    b.ToTable("UnidadeUsuarios");
                });

            modelBuilder.Entity("EPIlist.Models.Usuario", b =>
                {
                    b.Property<int>("UsuarioID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("CPF")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("Cargo")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<int?>("EquipeID")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("Senha")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("Telefone")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("UsuarioID");

                    b.HasIndex("EquipeID");

                    b.ToTable("Usuarios");
                });

            modelBuilder.Entity("EPIlist.Models.UsuarioEpi", b =>
                {
                    b.Property<int>("UsuarioID")
                        .HasColumnType("INTEGER");

                    b.Property<int>("EpiID")
                        .HasColumnType("INTEGER");

                    b.HasKey("UsuarioID", "EpiID");

                    b.HasIndex("EpiID");

                    b.ToTable("UsuarioEpis");
                });

            modelBuilder.Entity("EPIlist.Models.Equipe", b =>
                {
                    b.HasOne("EPIlist.Models.Usuario", "Lider")
                        .WithMany()
                        .HasForeignKey("LiderUsuarioID");

                    b.HasOne("EPIlist.Models.Unidade", "Unidade")
                        .WithMany()
                        .HasForeignKey("UnidadeID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Lider");

                    b.Navigation("Unidade");
                });

            modelBuilder.Entity("EPIlist.Models.UnidadeUsuario", b =>
                {
                    b.HasOne("EPIlist.Models.Unidade", "Unidade")
                        .WithMany("UnidadesUsuarios")
                        .HasForeignKey("UnidadeID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("EPIlist.Models.Usuario", "Usuario")
                        .WithMany("UsuariosUnidades")
                        .HasForeignKey("UsuarioID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Unidade");

                    b.Navigation("Usuario");
                });

            modelBuilder.Entity("EPIlist.Models.Usuario", b =>
                {
                    b.HasOne("EPIlist.Models.Equipe", "Equipe")
                        .WithMany("Usuarios")
                        .HasForeignKey("EquipeID");

                    b.Navigation("Equipe");
                });

            modelBuilder.Entity("EPIlist.Models.UsuarioEpi", b =>
                {
                    b.HasOne("EPIlist.Models.Epi", "Epi")
                        .WithMany("EpisUsuario")
                        .HasForeignKey("EpiID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("EPIlist.Models.Usuario", "Usuario")
                        .WithMany("UsuariosEpis")
                        .HasForeignKey("UsuarioID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Epi");

                    b.Navigation("Usuario");
                });

            modelBuilder.Entity("EPIlist.Models.Epi", b =>
                {
                    b.Navigation("EpisUsuario");
                });

            modelBuilder.Entity("EPIlist.Models.Equipe", b =>
                {
                    b.Navigation("Usuarios");
                });

            modelBuilder.Entity("EPIlist.Models.Unidade", b =>
                {
                    b.Navigation("UnidadesUsuarios");
                });

            modelBuilder.Entity("EPIlist.Models.Usuario", b =>
                {
                    b.Navigation("UsuariosEpis");

                    b.Navigation("UsuariosUnidades");
                });
#pragma warning restore 612, 618
        }
    }
}
